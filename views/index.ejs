<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Shadow City Generator Frontend</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/style.css">
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <style>
    .preview-container {
      margin-top: 20px;
    }

    .preview-container img {
      max-width: 100%;
      border: 1px solid #ddd;
      padding: 5px;
    }

    .download-links a {
      display: block;
      margin-bottom: 5px;
    }

    .log-container {
      margin-top: 20px;
    }

    #liveLog {
      background-color: #1e1e1e;
      color: #cfcfcf;
      padding: 10px;
      border-radius: 5px;
      min-height: 100px;
      max-height: 600px;
      overflow-y: scroll;
      font-family: monospace;
      white-space: pre;
    }

    .processing-indicator {
      display: none;
      color: #007bff;
      margin-bottom: 10px;
    }
  </style>
</head>

<body>
  <div class="container">
    <h1 class="mt-5">Shadow City Generator</h1>
    <p class="lead">Use the form to upload a GeoJSON file and set options. Live previews and downloadable outputs will
      appear on the right.</p>

    <!-- Hidden field to store uploaded file path -->
    <input type="hidden" id="uploadedFile" name="uploadedFile" value="">

    <div class="row">
      <!-- Left Column: Form and Options -->
      <div class="col-md-4">
        <form id="optionsForm">
          <!-- File Upload -->
          <div class="form-group">
            <label for="geojson">GeoJSON File</label>
            <input type="file" class="form-control-file" id="geojson" name="geojson" accept=".geojson" required>
          </div>

          <!-- Preprocessing Options -->
          <fieldset class="border p-3 mb-3">
            <legend class="w-auto">Preprocessing Options</legend>
            <div class="form-group form-check">
              <input type="checkbox" class="form-check-input live-preview" id="preprocess" name="preprocess">
              <label class="form-check-label" for="preprocess">Enable Preprocessing</label>
            </div>
            <div class="form-group">
              <label for="crop-distance">Crop Distance (meters)</label>
              <input type="number" step="0.1" class="form-control live-preview" id="crop-distance" name="crop-distance">
            </div>
            <div class="form-group">
              <label for="crop-bbox">Bounding Box (paste from Overpass)</label>
              <input type="text" class="form-control live-preview" id="crop-bbox" name="crop-bbox"
                placeholder="e.g. 26.942061, -80.074937, 26.94714, -80.070162">
            </div>
          </fieldset>

          <!-- Basic Options -->
          <fieldset class="border p-3 mb-3">
            <legend class="w-auto">Basic Options</legend>
            <div class="form-group">
              <label for="size">Model Size (mm)</label>
              <input type="number" class="form-control live-preview" id="size" name="size" value="200" required>
            </div>
            <div class="form-group">
              <label for="height">Maximum Height (mm)</label>
              <input type="number" class="form-control live-preview" id="height" name="height" value="20" required>
            </div>
            <div class="form-group">
              <label for="style">Artistic Style</label>
              <select class="form-control live-preview" id="style" name="style">
                <option value="modern">Modern</option>
                <option value="classic">Classic</option>
                <option value="minimal">Minimal</option>
                <option value="block-combine" selected>Block Combine</option>
              </select>
            </div>
            <div class="form-group">
              <label for="detail">Detail Level (0-2)</label>
              <input type="number" step="0.1" class="form-control live-preview" id="detail" name="detail" value="1.0"
                required>
            </div>
            <div class="form-group">
              <label for="merge-distance">Merge Distance</label>
              <input type="number" step="0.1" class="form-control live-preview" id="merge-distance"
                name="merge-distance" value="2.0">
            </div>
            <div class="form-group">
              <label for="cluster-size">Cluster Size</label>
              <input type="number" step="0.1" class="form-control live-preview" id="cluster-size" name="cluster-size"
                value="3.0">
            </div>
            <div class="form-group">
              <label for="height-variance">Height Variance</label>
              <input type="number" step="0.1" class="form-control live-preview" id="height-variance"
                name="height-variance" value="0.2">
            </div>
            <div class="form-group">
              <label for="road-width">Road Width (mm)</label>
              <input type="number" step="0.1" class="form-control live-preview" id="road-width" name="road-width"
                value="1.2">
            </div>
            <div class="form-group">
              <label for="water-depth">Water Depth (mm)</label>
              <input type="number" step="0.1" class="form-control live-preview" id="water-depth" name="water-depth"
                value="2">
            </div>
            <div class="form-group">
              <label for="min-building-area">Minimum Building Area (mÂ²)</label>
              <input type="number" step="0.1" class="form-control live-preview" id="min-building-area"
                name="min-building-area" value="200.0">
            </div>
            <div class="form-group form-check">
              <input type="checkbox" class="form-check-input live-preview" id="debug" name="debug">
              <label class="form-check-label" for="debug">Enable Debug Output</label>
            </div>
          </fieldset>

          <!-- Bridge Options -->
          <fieldset class="border p-3 mb-3">
            <legend class="w-auto">Bridge Options</legend>
            <div class="form-group">
              <label for="bridge-height">Bridge Deck Height Above Base</label>
              <input type="number" step="0.1" class="form-control live-preview" id="bridge-height" name="bridge-height"
                value="2.0">
            </div>
            <div class="form-group">
              <label for="bridge-thickness">Bridge Deck Thickness</label>
              <input type="number" step="0.1" class="form-control live-preview" id="bridge-thickness"
                name="bridge-thickness" value="0.6">
            </div>
            <div class="form-group">
              <label for="support-width">Bridge Support Radius</label>
              <input type="number" step="0.1" class="form-control live-preview" id="support-width" name="support-width"
                value="2.0">
            </div>
          </fieldset>

          <!-- Export Options -->
          <fieldset class="border p-3 mb-3">
            <legend class="w-auto">Export Options</legend>
            <div class="form-group">
              <label for="export">Export Format</label>
              <select class="form-control live-preview" id="export" name="export">
                <option value="preview">Preview</option>
                <option value="stl">STL</option>
                <option value="both" selected>Both</option>
              </select>
            </div>
            <div class="form-group">
              <label for="output-stl">Output STL Filename</label>
              <input type="text" class="form-control live-preview" id="output-stl" name="output-stl"
                placeholder="Optional">
            </div>
            <div class="form-group form-check">
              <input type="checkbox" class="form-check-input live-preview" id="no-repair" name="no-repair">
              <label class="form-check-label" for="no-repair">Disable Automatic Geometry Repair</label>
            </div>
            <div class="form-group form-check">
              <input type="checkbox" class="form-check-input live-preview" id="force" name="force">
              <label class="form-check-label" for="force">Force STL Generation on Validation Failure</label>
            </div>
          </fieldset>

          <!-- Preview & Integration Options -->
          <fieldset class="border p-3 mb-3">
            <legend class="w-auto">Preview &amp; Integration Options</legend>
            <div class="form-group">
              <label>Preview Image Size (Width, Height in pixels)</label>
              <div class="form-row">
                <div class="col">
                  <input type="number" class="form-control live-preview" placeholder="Width" name="preview-size-width"
                    value="1080">
                </div>
                <div class="col">
                  <input type="number" class="form-control live-preview" placeholder="Height" name="preview-size-height"
                    value="1080">
                </div>
              </div>
            </div>
            <div class="form-group">
              <label for="preview-file">Preview Image Filename</label>
              <input type="text" class="form-control live-preview" id="preview-file" name="preview-file"
                placeholder="Optional">
            </div>
            <div class="form-group form-check">
              <input type="checkbox" class="form-check-input live-preview" id="watch" name="watch">
              <label class="form-check-label" for="watch">Watch SCAD File and Auto-Reload</label>
            </div>
            <div class="form-group">
              <label for="openscad-path">OpenSCAD Executable Path</label>
              <input type="text" class="form-control live-preview" id="openscad-path" name="openscad-path"
                placeholder="Optional">
            </div>
          </fieldset>

          <!-- Final Render Button -->
          <button type="button" id="renderBtn" class="btn btn-success mb-3">Render Final Model</button>
        </form>
      </div>

      <!-- Right Column: Live Previews and Downloadable Files -->
      <div class="col-md-8">
        <div class="processing-indicator">
          Processing changes... Preview will update in 2 seconds.
        </div>

        <div class="preview-container">
          <h3>Live Preview - Main Model</h3>
          <img id="previewMain" src="" alt="Main Model Preview" style="display: none;">
        </div>

        <!--      <div class="preview-container">
          <h3>Live Preview - Frame Model</h3>
          <img id="previewFrame" src="" alt="Frame Model Preview" style="display: none;">
        </div>
      -->
        <div class="log-container">
          <h4>Live Log</h4>
          <div id="liveLog"></div>
        </div>

        <div class="download-links mt-4">
          <h4>Download Rendered Files</h4>
          <div id="downloadLinks">
            <!-- Links will be inserted here after final render -->
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Debounce function to limit how often a function can be called
    function debounce(func, wait) {
      let timeout;
      return function executedFunction(...args) {
        // Show processing indicator
        $(".processing-indicator").show();

        const later = () => {
          clearTimeout(timeout);
          $(".processing-indicator").hide();
          func(...args);
        };

        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
      };
    }

    // Function to update the live preview images
    function updatePreview() {
      var uploadedFile = $("#uploadedFile").val();
      if (!uploadedFile) {
        console.log("No file uploaded yet.");
        return;
      }

      $("#liveLog").text("Generating preview...");

      var formData = $("#optionsForm").serializeArray();
      formData.push({ name: "uploadedFile", value: uploadedFile });

      $.ajax({
        url: "/preview",
        type: "POST",
        data: formData,
        success: function (data) {
          if (data.previewMain && data.previewFrame) {
            $("#previewMain").attr("src", data.previewMain + "?t=" + new Date().getTime()).show();
            $("#previewFrame").attr("src", data.previewFrame + "?t=" + new Date().getTime()).show();
          }

          var logText = "";
          if (data.stdout) {
            logText += data.stdout + "\n";
          }
          if (data.stderr) {
            logText += data.stderr + "\n";
          }
          if (logText.trim().length > 0) {
            $("#liveLog").text(logText);
          }
        },
        error: function (err) {
          console.error("Preview update error:", err);
          $("#liveLog").text("Error generating preview:\n" + JSON.stringify(err));
        }
      });
    }

    // Create debounced version of updatePreview with 2 second delay
    const debouncedUpdatePreview = debounce(updatePreview, 2000);

    // Handle file upload
    $("#geojson").on("change", function () {
      var fileInput = document.getElementById("geojson");
      if (fileInput.files.length === 0) return;

      var formData = new FormData();
      formData.append("geojson", fileInput.files[0]);

      $.ajax({
        url: "/uploadFile",
        type: "POST",
        data: formData,
        processData: false,
        contentType: false,
        success: function (data) {
          if (data.filePath) {
            $("#uploadedFile").val(data.filePath);
            debouncedUpdatePreview();
          }
        },
        error: function (err) {
          console.error("File upload error:", err);
          $("#liveLog").text("Error uploading file:\n" + JSON.stringify(err));
        }
      });
    });

    // Update live preview when any option changes
    $(".live-preview").on("change keyup", function () {
      debouncedUpdatePreview();
    });

    // Handle final render button click
    $("#renderBtn").on("click", function () {
      var uploadedFile = $("#uploadedFile").val();
      if (!uploadedFile) {
        alert("Please upload a GeoJSON file first.");
        return;
      }

      $("#liveLog").text("Generating final render...");
      var formData = $("#optionsForm").serializeArray();
      formData.push({ name: "uploadedFile", value: uploadedFile });

      $.ajax({
        url: "/render",
        type: "POST",
        data: formData,
        success: function (data) {
          var linksHtml = "";

          if (data.mainScad) {
            linksHtml += '<a href="' + data.mainScad + '" download>Main Model (SCAD)</a><br>';
          }
          if (data.frameScad) {
            linksHtml += '<a href="' + data.frameScad + '" download>Frame Model (SCAD)</a><br>';
          }

          if (data.stlFiles && data.stlFiles.mainStl) {
            linksHtml += '<a href="' + data.stlFiles.mainStl + '" download>Main Model (STL)</a><br>';
          }
          if (data.stlFiles && data.stlFiles.frameStl) {
            linksHtml += '<a href="' + data.stlFiles.frameStl + '" download>Frame Model (STL)</a><br>';
          }

          if (data.logFile) {
            linksHtml += '<a href="' + data.logFile + '" download>Debug Log</a><br>';
          }

          $("#downloadLinks").html(linksHtml);

          var logText = "";
          if (data.stdout) {
            logText += data.stdout + "\n";
          }
          if (data.stderr) {
            logText += data.stderr + "\n";
          }
          if (logText.trim().length > 0) {
            $("#liveLog").text(logText);
          }
        },
        error: function (err) {
          console.error("Final render error:", err);
          $("#liveLog").text("Error during final render:\n" + JSON.stringify(err));
          alert("An error occurred during final render.");
        }
      });
    });
  </script>
</body>

</html>